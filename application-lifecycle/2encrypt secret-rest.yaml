# kubectl create secret generic my-secret --from-literal=key1=supersecret
# kubectl get secrets my-secret -o yaml
# echo "c3VwZXJzZWNyZXQ=" | base64 --decode


# ETCDCTL_API=3 etcdctl \
#    --cacert=/etc/kubernetes/pki/etcd/ca.crt   \
#    --cert=/etc/kubernetes/pki/etcd/server.crt \
#    --key=/etc/kubernetes/pki/etcd/server.key  \
#    get /registry/secrets/default/my-secret2 | hexdump -C

#    Configuration and determining whether encryption at rest is already enabled 

#    ps -aux | grep kube-api | grep -i "encryption-provider-config"



# head -c 32 /dev/urandom | base64

---
apiVersion: apiserver.config.k8s.io/v1
kind: EncryptionConfiguration
resources:
  - resources:
      - secrets
    providers:
      - aescbc:
          keys:
            - name: key1
              # See the following text for more details about the secret value
              secret: SK6YZ9PrIVSmKqM3TSRXl/y4vHA2TVI4sVvw/DpqzR0=
      - identity: {} # this fallback allows reading unencrypted secrets;
                     # for example, during initial migration

# https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/