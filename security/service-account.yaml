# kubectl create serviceaccount dashboard-sa

# kubectl get serviceaccount

# kubectl describe serviceaccount dashboard-sa
 
# kubectl describe secret dashboard-sa-token-xxxx

# kubectl create serviceaccount dashboard-sa
# kubectl set serviceaccount deploy/web-dashboard dashboard-sa

apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kubernetes-dashboard


---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: kubernetes-dashboard

# kubectl -n kubernetes-dashboard create token admin-user

# Getting a long-lived Bearer Token for ServiceAccount
---
apiVersion: v1
kind: Secret
metadata:
  name: admin-user
  namespace: kubernetes-dashboard
  annotations:
    kubernetes.io/service-account.name: "admin-user"   
type: kubernetes.io/service-account-token  

# kubectl get secret admin-user -n kubernetes-dashboard -o jsonpath={".data.token"} | base64 -d

# kubectl -n kubernetes-dashboard delete serviceaccount admin-user
# kubectl -n kubernetes-dashboard delete clusterrolebinding admin-user

# https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/creating-sample-user.md

# 32583
# eyJhbGciOiJSUzI1NiIsImtpZCI6ImNSZTBHM1phbzRXQzhwa1hIY3ZtTzJYWWlsdVhlTGgzbHp3TmdYNDJ1Y3MifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIxZjI4MjU4ZS02ODQzLTQ3YTUtYmE2ZC00ZDQzMTEzZjZlMmQiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZXJuZXRlcy1kYXNoYm9hcmQ6YWRtaW4tdXNlciJ9.a9EWWBJdOqupSKNyjZQ1DIvpzlt0moCxkG0ucvzl3gWNnB3pp54zaatkCDlmyzRtFq0Sn5o6ivZ_Y7n_gYhDtbEz8-U3LiP3Z0v4A1MsaF_WwdJ14rXuj8IOKJEHDxMuKeihQ32JNtwFMq02I2sJYvV7XWa2Dfp8KfD0-Is0zq8TADj_Exhh7vRT-jcRPZ8hBQiR01Kb1GCffy8_DXNbRiw-RrFGAUMltOlx0rlSjM2kakddxnGSNV3ut1J-KFye1PMvJNGV1jeeBpLk3NI5mMh3HAhjjaejwr1Z_4Eg44vdue4lYblznQMiEaWa4Q9SshaTiuIQAo0oxj0S5l3M7Q


# k api-resources --sort-by name
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-reader-cluster-role
rules:
- apiGroups: [""]
  resources: ["pods","configmaps","services","events","namespaces","nodes","limitranges","persistentvolumes","persistenttvolumeclaims","resourcequotas"]
  verbs: ["get", "watch", "list"]
- apiGroups:
    - apps
  resources: ["*"]
  verbs:
    - get
    - list
    - watch


source <(kubectl completion bash) 
echo "source <(kubectl completion bash)" >> ~/.bashrc \
echo "alias kdr='kubectl --dry-run=client -o yaml'">>~/.bashrc    | kdr run my-pod --image=nginx:latest > my-pod.yaml
